---
// 头部组件，包含Logo和搜索框
const { useNavigationHeader } = Astro.props;
import NavigationHeader from "./cover/NavigationHeader.astro";
---

<header
    id="main-header"
    class="bg-white shadow-md sticky top-0 z-50 transition-transform duration-300 ease-in-out"
>
    <div class="container mx-auto px-4">
        <div class="flex items-center justify-between py-4">
            <!-- Logo -->
            <div class="flex items-center">
                <a
                    href="#"
                    class="text-2xl font-bold text-indigo-600 flex items-center"
                >
                    <i class="fas fa-microchip mr-2"></i>
                    XXX
                </a>
            </div>

            <!-- 搜索和操作区 -->
            <div class="hidden md:flex items-center space-x-4">
                <div class="relative">
                    <input
                        type="text"
                        placeholder="搜索..."
                        class="pl-10 pr-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-indigo-300 focus:border-indigo-500 transition-all w-64"
                    />
                    <!-- SVG搜索图标 -->
                    <svg
                        class="absolute left-3 top-1/2 transform -translate-y-1/2 w-4 h-4 text-gray-400"
                        fill="none"
                        stroke="currentColor"
                        viewBox="0 0 24 24"
                        xmlns="http://www.w3.org/2000/svg"
                    >
                        <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
                        ></path>
                    </svg>
                </div>
                <a
                    href="#"
                    class="p-2 text-gray-600 hover:text-indigo-600 transition-colors"
                >
                    <i class="fas fa-user-circle text-xl"></i>
                </a>
            </div>
        </div>
    </div>

    {useNavigationHeader && <NavigationHeader />}
</header>

<!-- <script>
    document.addEventListener("DOMContentLoaded", function () {
        const header = document.getElementById("main-header");
        let lastScrollTop = 0;
        let isScrolling = false;

        // 防抖函数
        function debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }

        function handleScroll() {
            const currentScrollTop =
                window.pageYOffset || document.documentElement.scrollTop;

            // 避免在顶部时触发折叠
            if (currentScrollTop <= 0) {
                header.classList.remove("header-hidden");
                return;
            }

            // 向下滚动且滚动距离超过Header高度时隐藏
            if (
                currentScrollTop > lastScrollTop &&
                currentScrollTop > header.offsetHeight
            ) {
                header.classList.add("header-hidden");
            }
            // 向上滚动时显示
            else if (currentScrollTop < lastScrollTop) {
                header.classList.remove("header-hidden");
            }

            lastScrollTop = currentScrollTop;
        }

        // 使用防抖优化性能
        const debouncedHandleScroll = debounce(handleScroll, 10);

        window.addEventListener("scroll", debouncedHandleScroll, {
            passive: true,
        });
    });
</script> -->

<style>
    .header-hidden {
        transform: translateY(-100%);
    }

    /* 确保过渡效果应用到正确的属性 */
    #main-header {
        transition: transform 0.3s ease-in-out;
    }

    /* 为移动端优化 */
    @media (max-width: 768px) {
        #main-header {
            transition: transform 0.2s ease-in-out;
        }
    }
</style>
